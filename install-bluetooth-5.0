#!/bin/bash

# ==============================================================================
# Este script automatiza a instalação completa do Bluetooth, incluindo a
# habilitação dos repositórios necessários e a instalação de firmwares.
# ==============================================================================

# --- Configuração de Robustez ---
set -e
set -o pipefail
trap 'error_handler $? $LINENO' ERR

# --- Funções Globais de Log e Erro ---
log_step() { echo -e "\n\e[1;35m>>> PASSO: $1\e[0m"; }
log_success() { echo -e "\e[1;32m[SUCESSO] $1\e[0m"; }
log_error() { echo -e "\e[1;31m[ERRO] $1\e[0m" >&2; }
log_info() { echo -e "\e[1;34m[INFO] $1\e[0m"; }
log_warning() { echo -e "\e[1;33m[AVISO] $1\e[0m"; }

error_handler() {
    log_error "Ocorreu um erro na linha $2. Código de saída: $1."
    exit 1
}

# --- Funções de Lógica ---

check_permissions() {
    if [ "$(id -u)" -ne 0 ]; then
        log_error "Este script precisa ser executado como root. Por favor, use 'sudo $0'"
        exit 1
    fi
}

prepare_repositories() {
    # log_step "Preparando os Repositórios do Sistema"
    
    # log_info "Habilitando os repositórios 'contrib', 'non-free' e 'non-free-firmware'..."
    # Este método robusto edita o sources.list para garantir que todos os componentes estejam presentes
    # sed -i -E 's#^(deb(-src)?\s+[^ ]+\s+[^ ]+)\s+.*#\1 main contrib non-free non-free-firmware#' /etc/apt/sources.list
    
    log_info "Atualizando a lista de pacotes..."
    apt update
    
    log_success "Repositórios configurados e atualizados."
}

install_bluetooth_packages() {
    log_step "Instalando pacotes de Bluetooth e Firmwares"
    
    log_info "Instalando: bluetooth, bluez, bluez-firmware e outros firmwares comuns..."
    apt install -y bluetooth bluez bluez-firmware firmware-realtek firmware-misc-nonfree
    
    log_success "Todos os pacotes de Bluetooth foram instalados."
}

enable_bluetooth_service() {
    log_step "Habilitando e Iniciando o Serviço de Bluetooth"
    
    log_info "Habilitando o serviço para iniciar com o sistema e iniciando-o agora..."
    # O comando '--now' habilita e inicia o serviço de uma só vez
    systemctl enable --now bluetooth
    
    if systemctl is-active --quiet bluetooth; then
      log_success "O serviço de Bluetooth está ativo e em execução."
    else
      log_warning "O serviço de Bluetooth não conseguiu iniciar. Uma reinicialização pode ser necessária."
    fi
}

# --- Função Principal ---
main() {
    clear
    check_permissions
    
    echo "==========================================================="
    echo "       Instalador Automatizado de Bluetooth para Debian      "
    echo "==========================================================="
    
    prepare_repositories
    install_bluetooth_packages
    enable_bluetooth_service

    # --- Finalização ---
    echo
    log_step "CONFIGURAÇÃO CONCLUÍDA"
    log_warning "É ALTAMENTE RECOMENDADO reiniciar o computador para garantir que todos os drivers e firmwares sejam carregados corretamente."
    echo
    
    read -p "Você deseja reiniciar agora? (S/n): " reboot_choice
    if [[ "${reboot_choice:-s}" =~ ^[Ss]$ ]]; then
        log_info "Reiniciando o sistema em 5 segundos..."
        sleep 5
        reboot
    else
        log_info "Lembre-se de reiniciar o sistema manualmente mais tarde."
        log_info "Após reiniciar, o ícone do Bluetooth deverá aparecer na sua bandeja do sistema."
    fi
}

# --- Ponto de Entrada do Script ---
main
