#!/bin/bash

# ==============================================================================
# Script de Configuração do Ambiente de Desenvolvimento Android para Debian 13
#
# Este script automatiza a instalação e configuração de um ambiente de
# desenvolvimento Android profissional no Debian 13 "Trixie".
# Ele instala o JDK, KVM, as dependências necessárias e a versão mais
# recente do Android Studio a partir do arquivo tarball oficial.
#
# USO:
# 1. Salve este arquivo como 'setup-android-dev.sh'.
# 2. Torne-o executável: chmod +x setup-android-dev.sh
# 3. Execute com privilégios de superusuário: sudo ./setup-android-dev.sh
#
# AVISO: Este script fará alterações no sistema, incluindo a instalação
# de pacotes e a modificação de arquivos de configuração do usuário.
# Revise o script cuidadosamente antes de executar.
# ==============================================================================

# Sai imediatamente se um comando falhar
set -e

# --- Funções de Log ---
log_success() {
    echo -e "\n\e[1;32m[SUCESSO] $1\e[0m"
}

log_error() {
    echo -e "\n\e[1;31m[ERRO] $1\e[0m" >&2
}

log_warning() {
    echo -e "\n\e[1;33m[AVISO] $1\e[0m"
}

log_info() {
   echo -e "\n\e[1;34m[INFO] $1\e[0m"
}

# --- Verificações Iniciais ---
check_prerequisites() {
    log_info "Verificando pré-requisitos do sistema..."

    # 1. Verificar arquitetura do sistema
    if [ "$(uname -m)" != "x86_64" ]; then
        log_error "O Android Studio requer uma arquitetura de sistema de 64 bits."
        exit 1
    fi

    # 2. Verificar se o sistema é 64-bit (redundante, mas bom pra garantir)
    if ! getconf LONG_BIT | grep -q "64"; then
        log_error "O Android Studio requer uma arquitetura de sistema de 64 bits."
        exit 1
    fi
    log_success "Arquitetura de 64 bits confirmada."

    # 3. Verificar suporte à virtualização por hardware (KVM)
    if ! egrep -q '(vmx|svm)' /proc/cpuinfo; then
        log_warning "Suporte à virtualização por hardware (Intel VT-x ou AMD-V) não detectado."
        log_warning "O Emulador Android será extremamente lento. É altamente recomendável habilitar a virtualização na BIOS/UEFI do seu sistema."
    else
        log_success "Suporte à virtualização por hardware (KVM) detectado."
    fi
}

# --- Instalação de Dependências do Sistema ---
install_dependencies() {
    log_info "Atualizando a lista de pacotes e instalando dependências do sistema..."
    apt update

    log_info "Instalando OpenJDK 25..."
    apt install -y openjdk-25-jdk

    log_info "Adicionando arquitetura i386 e instalando bibliotecas de compatibilidade de 32 bits..."
    dpkg --add-architecture i386
    apt update
    apt install -y libc6:i386 libncurses6:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386

    log_info "Instalando KVM, QEMU e ferramentas de gerenciamento de virtualização..."
    apt install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager
}

# --- Instalação do Android Studio ---
install_android_studio() {
    log_info "Instalando o Android Studio..."

    STUDIO_URL="https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2025.1.1.13/android-studio-2025.1.1.13-linux.tar.gz"
    STUDIO_ARCHIVE="/tmp/android-studio-linux.tar.gz"
    INSTALL_DIR="/opt"
    STUDIO_DIR_NAME="android-studio"

    log_info "Baixando o Android Studio de $STUDIO_URL..."
    curl -L -o "$STUDIO_ARCHIVE" "$STUDIO_URL"

    log_info "Extraindo o Android Studio para $INSTALL_DIR..."
    tar -xzf "$STUDIO_ARCHIVE" -C "$INSTALL_DIR"

    # Renomeia o diretório extraído para um nome genérico
    #EXTRACTED_DIR_NAME=$(tar -tzf "$STUDIO_ARCHIVE" | head -1 | cut -f1 -d"/")
    
    #if [ -d "$INSTALL_DIR/$EXTRACTED_DIR_NAME" ]; then
    #    log_info "Renomeando '$INSTALL_DIR/$EXTRACTED_DIR_NAME' para '$INSTALL_DIR/$STUDIO_DIR_NAME'..."
    #    mv "$INSTALL_DIR/$EXTRACTED_DIR_NAME" "$INSTALL_DIR/$STUDIO_DIR_NAME"
    #else
    #    log_error "Não foi possível encontrar o diretório extraído '$EXTRACTED_DIR_NAME'."
    #    exit 1
    #fi

    log_info "Limpando o arquivo baixado..."
    rm "$STUDIO_ARCHIVE"

    log_success "Android Studio instalado em $INSTALL_DIR/$STUDIO_DIR_NAME."
}

# --- Configuração do Ambiente do Usuário ---
configure_environment() {
    if [ -n "$SUDO_USER" ]; then
        TARGET_USER="$SUDO_USER"
    else
        log_error "Este script deve ser executado com 'sudo'. Não foi possível determinar o usuário alvo."
        exit 1
    fi

    TARGET_HOME=$(getent passwd "$TARGET_USER" | cut -d: -f6)

    log_info "Configurando o ambiente para o usuário: $TARGET_USER..."

    log_info "Adicionando o usuário $TARGET_USER aos grupos 'libvirt' e 'kvm'..."
    adduser "$TARGET_USER" libvirt
    adduser "$TARGET_USER" kvm

    BASHRC_FILE="$TARGET_HOME/.bashrc"
    log_info "Configurando variáveis de ambiente em $BASHRC_FILE..."

    if ! grep -q "ANDROID_HOME" "$BASHRC_FILE"; then
        echo '' >> "$BASHRC_FILE"
        echo '# Android SDK Environment Variables' >> "$BASHRC_FILE"
        echo 'export ANDROID_HOME=$HOME/Android/Sdk' >> "$BASHRC_FILE"
        echo 'export PATH=$PATH:$ANDROID_HOME/emulator' >> "$BASHRC_FILE"
        echo 'export PATH=$PATH:$ANDROID_HOME/platform-tools' >> "$BASHRC_FILE"
        echo 'export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin' >> "$BASHRC_FILE"
        echo 'export PATH=$PATH:$ANDROID_HOME/tools' >> "$BASHRC_FILE"
        echo 'export PATH=$PATH:$ANDROID_HOME/tools/bin' >> "$BASHRC_FILE"
        log_success "Variáveis de ambiente do Android SDK adicionadas a $BASHRC_FILE."
    else
        log_warning "Variáveis de ambiente do Android SDK já parecem estar configuradas em $BASHRC_FILE. Pulando."
    fi

    DESKTOP_ENTRY_DIR="$TARGET_HOME/.local/share/applications"
    mkdir -p "$DESKTOP_ENTRY_DIR"
    DESKTOP_FILE="$DESKTOP_ENTRY_DIR/android-studio.desktop"

    log_info "Criando atalho de desktop em $DESKTOP_FILE..."
    cat > "$DESKTOP_FILE" <<EOL
[Desktop Entry]
Version=1.0
Type=Application
Name=Android Studio
Comment=The Official IDE for Android
Exec="/opt/android-studio/bin/studio.sh" %f
Icon="/opt/android-studio/bin/studio.svg"
Categories=Development;IDE;
Terminal=false
StartupNotify=true
StartupWMClass=jetbrains-studio
EOL

    chown "$TARGET_USER":"$TARGET_USER" "$DESKTOP_FILE"
    chmod +x "$DESKTOP_FILE"

    log_success "Atalho de desktop do Android Studio criado."
}

# --- Função Principal ---
main() {
    if [ "$(id -u)" -ne 0 ]; then
       log_error "Este script precisa ser executado como root. Use 'sudo ./setup-android."
       exit 1
    fi

    log_info "Iniciando a configuração do Ambiente de Desenvolvimento Android no Debian 13."
    check_prerequisites
    install_dependencies
    install_android_studio
    configure_environment

    log_info "========================= CONFIGURAÇÃO CONCLUÍDA ========================="
    log_success "O ambiente de desenvolvimento Android foi instalado e configurado."
    log_info "Próximos Passos Manuais:"
    echo "1. FAÇA LOGOUT E LOGIN NOVAMENTE para que as alterações de grupo (KVM/libvirt) tenham efeito."
    echo "2. Execute o Android Studio pela primeira vez a partir do menu de aplicativos."
    echo "3. Siga o Assistente de Configuração para baixar os componentes do SDK (geralmente em ~/Android/Sdk)."
    echo "4. Para um desempenho ideal, considere aumentar o heap da JVM do IDE via 'Help > Edit Custom VM Options'."
    echo "============================================================================"
}

# --- Ponto de Entrada do Script ---
main
